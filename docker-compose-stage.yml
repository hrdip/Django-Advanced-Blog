version: '3.9'

services:
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning


  backend:
    build: .
    container_name: backend
    command: gunicorn core.wsgi --bind 0.0.0.0:8000
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - SECRET_KEY=test
      - DEBUG=False
    depends_on:
      - redis
      - db



  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend


  worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend


  db:
    container_name: postgresql
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Hrdip@2010
      POSTGRES_DB: test_db
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5



  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: Hrdip@2010
    ports:
      - "5050:80"


volumes:
  static_volume:
  media_volume:

